name: Python CI/CD Pipeline
on: [push, pull_request]

permissions:
  contents: write
  checks: write
  statuses: write

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint autopep8 

      - name: Check for Python files
        id: check-py-files
        shell: bash
        run: |
          FILES=$(git ls-files '*.py' | tr '\n' ' ')
          if [ -n "$FILES" ]; then
          echo "has_py_files=true" >> $GITHUB_OUTPUT
          echo "files=$FILES" >> $GITHUB_OUTPUT
          else
          echo "has_py_files=false" >> $GITHUB_OUTPUT
          fi

      - name: Format code with autopep8
        if: steps.check-py-files.outputs.has_py_files == 'true'
        shell: bash
        run: |
          autopep8 --in-place --aggressive --aggressive ${{ steps.check-py-files.outputs.files }}

      - name: Analyze code with pylint
        if: steps.check-py-files.outputs.has_py_files == 'true'
        shell: bash
        run: |
          pylint --fail-under=7.0 ${{ steps.check-py-files.outputs.files }}
        continue-on-error: true

      - name: Commit changes
        if: steps.check-py-files.outputs.has_py_files == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Auto-format"
          commit_options: '--amend --no-edit'
          push_options: '--force-with-lease'

  test:
    name: Run Tests
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Cache APT packages
        uses: actions/cache@v3
        with:
          path: /var/cache/apt/archives/*.deb
          key: apt-cache-${{ runner.os }}-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            apt-cache-${{ runner.os }}-

      - name: Set up OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          xvfb \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-xinerama0 \
          libxcb-xfixes0 \
          x11-utils \
          libopengl0 \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-qt PyQt5
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e .[dev]

      - name: Run tests
        run: |
          export QT_DEBUG_PLUGINS=1
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3
          pytest tests/ -v
