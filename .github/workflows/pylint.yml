name: Python Code Quality and Tests
on: [push, pull_request]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up OS
      run: |
        sudo apt install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 x11-utils xvfb
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint autopep8 pytest
        pip install -e .[dev]  # Install package in editable mode with dev dependencies
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Check for Python files
      id: check-py-files
      shell: bash
      run: |
        FILES=$(git ls-files '*.py' | tr '\n' ' ')
        if [ -n "$FILES" ]; then
          echo "has_py_files=true" >> $GITHUB_OUTPUT
          echo "files=$FILES" >> $GITHUB_OUTPUT
        else
          echo "has_py_files=false" >> $GITHUB_OUTPUT
        fi

    - name: Format code with autopep8
      if: steps.check-py-files.outputs.has_py_files == 'true'
      shell: bash
      run: |
        autopep8 --in-place --aggressive --aggressive ${{ steps.check-py-files.outputs.files }}
    
    - name: Analyze code with pylint
      if: steps.check-py-files.outputs.has_py_files == 'true'
      shell: bash
      run: |
        pylint --fail-under=7.0 ${{ steps.check-py-files.outputs.files }}
      continue-on-error: true

    - name: Run tests with pytest
      run: |
        xvfb-run pytest tests/ -v

    - name: Commit changes
      if: steps.check-py-files.outputs.has_py_files == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --staged --quiet || git commit -m "Auto-format Python code with autopep8" || true
